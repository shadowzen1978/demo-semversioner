# This is a basic workflow to help you get started with Actions

name: Feature branches

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
    branches:
      - 'master'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  semversioner:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # We need to get all commits here to determine which log messages
      # to create semversioner change entries for because
      # the most recent one or two might be related to merges or automation
      # actions.
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Runs a set of commands using the runners shell
      - name: Install semversioner
        run: |
          python3 --version
          pip3 install semversioner

      # NOTE:
      # Commenting out the below section for now as running this step on
      # every push interrupt can interrupt developer workflow and productivity.
      # I think there is a better way to run this during a Pull Request instead.
      #
      # Increments a minor change each push
      # For now is just a test message but will incorporate logic
      # to create a change for every commit since the last push.
      # For now we get the last message that IS NOT a chore or merge message.
      # Creates a .semversioner/next-release folder with hashes for each change
      #- name: Minor bump
      #  run: |
      #    source ${{ github.workspace}}/.github/scripts/git-get-last-commit-not-merge.sh
      #    echo "Message from script: $GIT_LAST_COMMIT_MSG"
      #    if [ -z ${GIT_LAST_COMMIT_MSG+x} ];then GIT_LAST_COMMIT_MSG=$(git --no-pager log --pretty=format:"%s" -1); fi
      #    semversioner add-change --type minor --description "$GIT_LAST_COMMIT_MSG"
      #    git pull && git add .semversioner/*
      #    cat .semversioner/next-release/*


      - name: Show info
        run: |
          git version
          git fetch && git status
          echo "github.ref is: ${{ github.ref }}"
          CURRENT_VERSION=$(semversioner current-version)
          echo "Current version: $CURRENT_VERSION"

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
